{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nvar MainNavMobileLevel2 = function MainNavMobileLevel2(_ref) {\n  var getHeight = _ref.getHeight,\n      title = _ref.title;\n  var hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n\n  var _useState = useState({\n    width: -1,\n    height: -1\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var width = dimensions.width,\n      height = dimensions.height;\n\n  var _useState2 = useState(true),\n      isUser = _useState2[0],\n      setIsUser = _useState2[1];\n\n  return __jsx(Fragment, null, __jsx(Measure, {\n    bounds: true,\n    onResize: function onResize(contentRect) {\n      setDimensions(contentRect.bounds);\n    }\n  }, function (_ref2) {\n    var measureRef = _ref2.measureRef;\n    return __jsx(\"div\", {\n      ref: measureRef,\n      className: \"fixed-top\",\n      height: getHeight(height)\n    }, __jsx(\"nav\", {\n      className: \"navbar \".concat(css.navBarFlex)\n    }, __jsx(\"span\", {\n      onClick: function onClick() {\n        return Router.back();\n      },\n      className: \"iconfont icon_chevron-left-light\",\n      style: hamburger\n    }), __jsx(\"div\", {\n      className: css.title\n    }, props.title)));\n  }));\n};\n\nexport default MainNavMobileLevel2;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/includes/MainNavMobileLevel2.js"],"names":["React","Component","Fragment","useState","Link","css","Router","Measure","UserStateBar","MainNavMobileLevel2","getHeight","title","hamburger","marginLeft","fontSize","width","height","dimensions","setDimensions","isUser","setIsUser","contentRect","bounds","measureRef","navBarFlex","back","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACpD,MAAMC,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE,MADI;AAEhBC,IAAAA,QAAQ,EAAE;AAFM,GAAlB;;AADoD,kBAKhBX,QAAQ,CAAC;AAC3CY,IAAAA,KAAK,EAAE,CAAC,CADmC;AAE3CC,IAAAA,MAAM,EAAE,CAAC;AAFkC,GAAD,CALQ;AAAA,MAK7CC,UAL6C;AAAA,MAKjCC,aALiC;;AAAA,MAS5CH,KAT4C,GAS1BE,UAT0B,CAS5CF,KAT4C;AAAA,MASrCC,MATqC,GAS1BC,UAT0B,CASrCD,MATqC;;AAAA,mBAUxBb,QAAQ,CAAC,IAAD,CAVgB;AAAA,MAU7CgB,MAV6C;AAAA,MAUrCC,SAVqC;;AAYpD,SACE,MAAC,QAAD,QACE,MAAC,OAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,QAAQ,EAAE,kBAAAC,WAAW,EAAI;AACvBH,MAAAA,aAAa,CAACG,WAAW,CAACC,MAAb,CAAb;AACD;AAJH,KAMG;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WACC;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,SAAS,aAFX;AAGE,MAAA,MAAM,EAAEb,SAAS,CAACM,MAAD;AAHnB,OAKE;AAAK,MAAA,SAAS,mBAAYX,GAAG,CAACmB,UAAhB;AAAd,OACE;AACE,MAAA,OAAO,EAAE;AAAA,eAAMlB,MAAM,CAACmB,IAAP,EAAN;AAAA,OADX;AAEE,MAAA,SAAS,EAAC,kCAFZ;AAGE,MAAA,KAAK,EAAEb;AAHT,MADF,EAME;AAAK,MAAA,SAAS,EAAEP,GAAG,CAACM;AAApB,OAA4Be,KAAK,CAACf,KAAlC,CANF,CALF,CADD;AAAA,GANH,CADF,CADF;AA2BD,CAvCD;;AAyCA,eAAeF,mBAAf","sourcesContent":["import React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nconst MainNavMobileLevel2 = ({ getHeight, title }) => {\n  const hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n  const [dimensions, setDimensions] = useState({\n    width: -1,\n    height: -1\n  });\n  const { width, height } = dimensions;\n  const [isUser, setIsUser] = useState(true);\n\n  return (\n    <Fragment>\n      <Measure\n        bounds\n        onResize={contentRect => {\n          setDimensions(contentRect.bounds);\n        }}\n      >\n        {({ measureRef }) => (\n          <div\n            ref={measureRef}\n            className={`fixed-top`}\n            height={getHeight(height)}\n          >\n            <nav className={`navbar ${css.navBarFlex}`}>\n              <span\n                onClick={() => Router.back()}\n                className=\"iconfont icon_chevron-left-light\"\n                style={hamburger}\n              />\n              <div className={css.title}>{props.title}</div>\n            </nav>\n          </div>\n        )}\n      </Measure>\n    </Fragment>\n  );\n};\n\nexport default MainNavMobileLevel2;\n"]},"metadata":{},"sourceType":"module"}