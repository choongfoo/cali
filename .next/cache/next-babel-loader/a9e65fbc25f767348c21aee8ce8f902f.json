{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, Fragment } from 'react';\nimport Modal from \"react-modal\";\nimport css from \"../styles/main.scss\";\nconst modalStyles = {\n  content: {\n    width: '100%',\n    display: 'flex',\n    overflowY: 'scroll',\n    flexDirection: 'column',\n    backgroundColor: '#d8d8d8',\n    padding: '0',\n    top: '0',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translateX(-50%)',\n    border: 'none'\n  }\n};\nModal.setAppElement('#__next');\n\nconst ConvenienceStoreItem = ({\n  logo,\n  processImg\n}) => {\n  const {\n    0: modalIsOpen,\n    1: setModalIsOpen\n  } = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    Modal.subtitle.style.color = '#fff';\n    Modal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,.65)';\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const renderImg = processImg => {\n    return processImg.map((p, i) => __jsx(\"img\", {\n      style: {\n        width: '100%'\n      },\n      key: i,\n      src: `/images/convenienceStore/${p}`,\n      alt: `流程${i + 1}`,\n      className: \"img-responsive\"\n    }));\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    onClick: openModal\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: 100\n    },\n    src: logo,\n    alt: \"\",\n    className: \"img-responsive\"\n  })), __jsx(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: modalStyles,\n    contentLabel: \"Example Modal\"\n  }, __jsx(\"div\", {\n    className: css.modalHeader\n  }, __jsx(\"div\", {\n    ref: subtitle => Modal.subtitle = subtitle\n  }, \"\\u8D85\\u5546\\u7E73\\u8CBB\\u6D41\\u7A0B\"), __jsx(\"span\", {\n    className: \"iconfont icon_times-light\",\n    onClick: closeModal\n  })), __jsx(\"div\", {\n    className: css.modalBody\n  }, renderImg(processImg))));\n};\n\nexport default ConvenienceStoreItem;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/ConvenienceStoreItem.js"],"names":["React","useState","Fragment","Modal","css","modalStyles","content","width","display","overflowY","flexDirection","backgroundColor","padding","top","left","right","bottom","transform","border","setAppElement","ConvenienceStoreItem","logo","processImg","modalIsOpen","setModalIsOpen","openModal","afterOpenModal","subtitle","style","color","defaultStyles","overlay","closeModal","renderImg","map","p","i","maxWidth","modalHeader","modalBody"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,SAAS,EAAC,QAHH;AAIPC,IAAAA,aAAa,EAAE,QAJR;AAKPC,IAAAA,eAAe,EAAE,SALV;AAMPC,IAAAA,OAAO,EAAE,GANF;AAOPC,IAAAA,GAAG,EAAE,GAPE;AAQPC,IAAAA,IAAI,EAAE,KARC;AASPC,IAAAA,KAAK,EAAE,MATA;AAUPC,IAAAA,MAAM,EAAE,MAVD;AAWPC,IAAAA,SAAS,EAAE,kBAXJ;AAYPC,IAAAA,MAAM,EAAE;AAZD;AADS,CAApB;AAiBAf,KAAK,CAACgB,aAAN,CAAoB,SAApB;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAwB;AACnD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCvB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMwB,SAAS,GAAG,MAAM;AACtBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAME,cAAc,GAAG,MAAM;AAC3B;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAeC,KAAf,CAAqBC,KAArB,GAA6B,MAA7B;AACA1B,IAAAA,KAAK,CAAC2B,aAAN,CAAoBC,OAApB,CAA4BpB,eAA5B,GAA8C,iBAA9C;AACD,GAJD;;AAMA,QAAMqB,UAAU,GAAG,MAAM;AACvBR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMS,SAAS,GAAGX,UAAU,IAAI;AAC9B,WAAOA,UAAU,CAACY,GAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAAK,MAAA,KAAK,EAAE;AAAC7B,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAA6B,MAAA,GAAG,EAAE6B,CAAlC;AAAqC,MAAA,GAAG,EAAG,4BAA2BD,CAAE,EAAxE;AAA2E,MAAA,GAAG,EAAG,KAAIC,CAAC,GAAC,CAAE,EAAzF;AAA4F,MAAA,SAAS,EAAC;AAAtG,MAAvB,CAAP;AACD,GAFD;;AAGA,SACE,MAAC,QAAD,QACE;AAAK,IAAA,OAAO,EAAEX;AAAd,KACE;AAAK,IAAA,KAAK,EAAE;AAACY,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAA6B,IAAA,GAAG,EAAEhB,IAAlC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAA+C,IAAA,SAAS,EAAC;AAAzD,IADF,CADF,EAIE,MAAC,KAAD;AACE,IAAA,MAAM,EAAEE,WADV;AAEE,IAAA,WAAW,EAAEG,cAFf;AAGE,IAAA,cAAc,EAAEM,UAHlB;AAIE,IAAA,KAAK,EAAE3B,WAJT;AAKE,IAAA,YAAY,EAAC;AALf,KAOE;AAAK,IAAA,SAAS,EAAED,GAAG,CAACkC;AAApB,KACE;AAAK,IAAA,GAAG,EAAEX,QAAQ,IAAKxB,KAAK,CAACwB,QAAN,GAAiBA;AAAxC,4CADF,EAIE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,OAAO,EAAEK;AAArD,IAJF,CAPF,EAcE;AAAK,IAAA,SAAS,EAAE5B,GAAG,CAACmC;AAApB,KACGN,SAAS,CAACX,UAAD,CADZ,CAdF,CAJF,CADF;AAyBD,CA7CD;;AA+CA,eAAeF,oBAAf","sourcesContent":["import React, {useState, Fragment} from 'react';\nimport Modal from \"react-modal\";\nimport css from \"../styles/main.scss\";\n\nconst modalStyles = {\n  content: {\n    width: '100%',\n    display: 'flex',\n    overflowY:'scroll',\n    flexDirection: 'column',\n    backgroundColor: '#d8d8d8',\n    padding: '0',\n    top: '0',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translateX(-50%)',\n    border: 'none'\n  }\n};\n\nModal.setAppElement('#__next');\nconst ConvenienceStoreItem = ({logo, processImg}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    Modal.subtitle.style.color = '#fff';\n    Modal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,.65)';\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const renderImg = processImg => {\n    return processImg.map( (p,i)=><img style={{width: '100%'}} key={i} src={`/images/convenienceStore/${p}`} alt={`流程${i+1}`} className=\"img-responsive\"/>)\n  }\n  return (\n    <Fragment>\n      <div onClick={openModal}>\n        <img style={{maxWidth: 100}} src={logo} alt=\"\" className=\"img-responsive\"/>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={modalStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className={css.modalHeader}>\n          <div ref={subtitle => (Modal.subtitle = subtitle)}>\n            超商繳費流程\n          </div>\n          <span className=\"iconfont icon_times-light\" onClick={closeModal}/>\n        </div>\n\n        <div className={css.modalBody}>\n          {renderImg(processImg)}\n        </div>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default ConvenienceStoreItem;"]},"metadata":{},"sourceType":"module"}