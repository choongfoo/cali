{"ast":null,"code":"var _jsxFileName = \"/Users/liukaiming/WebstormProjects/cali/components/ScrollButton.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nclass ScrollButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalId: 0,\n      goTopShow: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', function (e) {\n      if (document.documentElement.scrollTop > 120) {\n        // this.setState({\n        //   goTopShow:true\n        // });\n        this.setState({\n          goTopShow: true\n        });\n        console.log('over 120');\n      } else {\n        // this.setState({\n        //   goTopShow:false\n        // });\n        this.setState({\n          goTopShow: false\n        });\n        console.log('less than 120');\n      }\n    });\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop() {\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n\n  render() {\n    return __jsx(\"button\", {\n      title: \"Back to top\",\n      className: this.state.goTopShow ? 'scroll active' : 'scroll',\n      onClick: () => {\n        this.scrollToTop();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"arrow-up iconfont iconchevron-up-solid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ScrollButton;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/ScrollButton.js"],"names":["React","ScrollButton","Component","constructor","props","state","intervalId","goTopShow","componentDidMount","window","addEventListener","e","document","documentElement","scrollTop","setState","console","log","scrollStep","pageYOffset","clearInterval","scroll","scrollStepInPx","scrollToTop","setInterval","bind","delayInMs","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CADD;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,UAASC,CAAT,EAAW;AAC3C,UAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAmC,GAAtC,EAA0C;AACxC;AACA;AACA;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAC;AAAZ,SAAd;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,OAND,MAMM;AACJ;AACA;AACA;AACA,aAAKF,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAC;AAAZ,SAAd;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,KAdD;AAeD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAIT,MAAM,CAACU,WAAP,KAAuB,CAA3B,EAA8B;AAC5BC,MAAAA,aAAa,CAAC,KAAKf,KAAL,CAAWC,UAAZ,CAAb;AACD;;AACDG,IAAAA,MAAM,CAACY,MAAP,CAAc,CAAd,EAAiBZ,MAAM,CAACU,WAAP,GAAqB,KAAKf,KAAL,CAAWkB,cAAjD;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIjB,UAAU,GAAGkB,WAAW,CAAC,KAAKN,UAAL,CAAgBO,IAAhB,CAAqB,IAArB,CAAD,EAA6B,KAAKrB,KAAL,CAAWsB,SAAxC,CAA5B;AACA,SAAKX,QAAL,CAAc;AAAET,MAAAA,UAAU,EAAEA;AAAd,KAAd;AACD;;AAEDqB,EAAAA,MAAM,GAAI;AACR,WAAO;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWE,SAAX,GAAqB,eAArB,GAAqC,QAA5E;AACQ,MAAA,OAAO,EAAG,MAAM;AAAE,aAAKgB,WAAL;AAAqB,OAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEL;AAAM,MAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AA7CwC;;AAgD3C,eAAetB,YAAf","sourcesContent":["import React from 'react'\n\nclass ScrollButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      intervalId: 0,\n      goTopShow: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', function(e){\n      if(document.documentElement.scrollTop>120){\n        // this.setState({\n        //   goTopShow:true\n        // });\n        this.setState({ goTopShow:true });\n        console.log('over 120');\n      }else {\n        // this.setState({\n        //   goTopShow:false\n        // });\n        this.setState({ goTopShow:false });\n        console.log('less than 120');\n      }\n    })\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop() {\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n    this.setState({ intervalId: intervalId });\n  }\n\n  render () {\n    return <button title='Back to top' className={this.state.goTopShow?'scroll active':'scroll'}\n                   onClick={ () => { this.scrollToTop(); }}>\n      <span className='arrow-up iconfont iconchevron-up-solid'/>\n    </button>;\n  }\n}\n\nexport default ScrollButton"]},"metadata":{},"sourceType":"module"}