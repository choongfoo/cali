{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nconst MainNavMobileLevel2 = ({\n  getHeight,\n  title,\n  path\n}) => {\n  const hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n  const {\n    0: dimensions,\n    1: setDimensions\n  } = useState({\n    width: -1,\n    height: -1\n  });\n  const {\n    width,\n    height\n  } = dimensions;\n  const {\n    0: isUser,\n    1: setIsUser\n  } = useState(true);\n\n  const handleClick = () => {\n    if (path) {\n      return Router.push('/');\n    } else if (back) {\n      return Router.back();\n    }\n  };\n\n  return __jsx(Fragment, null, __jsx(Measure, {\n    bounds: true,\n    onResize: contentRect => {\n      setDimensions(contentRect.bounds);\n    }\n  }, ({\n    measureRef\n  }) => __jsx(\"div\", {\n    ref: measureRef,\n    className: `fixed-top`,\n    height: getHeight(height)\n  }, __jsx(\"nav\", {\n    className: `navbar ${css.navBarFlex}`\n  }, __jsx(\"span\", {\n    onClick: handleClick,\n    className: \"iconfont icon_chevron-left-light\",\n    style: hamburger\n  }), __jsx(\"div\", {\n    className: css.title\n  }, title)), isUser ? __jsx(UserStateBar, null) : '')));\n};\n\nexport default MainNavMobileLevel2;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/includes/MainNavMobileLevel2.js"],"names":["React","Component","Fragment","useState","Link","css","Router","Measure","UserStateBar","MainNavMobileLevel2","getHeight","title","path","hamburger","marginLeft","fontSize","dimensions","setDimensions","width","height","isUser","setIsUser","handleClick","push","back","contentRect","bounds","measureRef","navBarFlex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAC5D,QAAMC,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE,MADI;AAEhBC,IAAAA,QAAQ,EAAE;AAFM,GAAlB;AAIA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC;AAC3Ce,IAAAA,KAAK,EAAE,CAAC,CADmC;AAE3CC,IAAAA,MAAM,EAAE,CAAC;AAFkC,GAAD,CAA5C;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBH,UAA1B;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMmB,WAAW,GAAG,MAAM;AACxB,QAAIV,IAAJ,EAAU;AACR,aAAON,MAAM,CAACiB,IAAP,CAAY,GAAZ,CAAP;AACD,KAFD,MAEO,IAAIC,IAAJ,EAAU;AACf,aAAOlB,MAAM,CAACkB,IAAP,EAAP;AACD;AACF,GAND;;AAQA,SACE,MAAC,QAAD,QACE,MAAC,OAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,QAAQ,EAAEC,WAAW,IAAI;AACvBR,MAAAA,aAAa,CAACQ,WAAW,CAACC,MAAb,CAAb;AACD;AAJH,KAMG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC;AACE,IAAA,GAAG,EAAEA,UADP;AAEE,IAAA,SAAS,EAAG,WAFd;AAGE,IAAA,MAAM,EAAEjB,SAAS,CAACS,MAAD;AAHnB,KAKE;AAAK,IAAA,SAAS,EAAG,UAASd,GAAG,CAACuB,UAAW;AAAzC,KACE;AACE,IAAA,OAAO,EAAEN,WADX;AAEE,IAAA,SAAS,EAAC,kCAFZ;AAGE,IAAA,KAAK,EAAET;AAHT,IADF,EAME;AAAK,IAAA,SAAS,EAAER,GAAG,CAACM;AAApB,KAA4BA,KAA5B,CANF,CALF,EAaGS,MAAM,GAAG,MAAC,YAAD,OAAH,GAAsB,EAb/B,CAPJ,CADF,CADF;AA4BD,CA/CD;;AAiDA,eAAeX,mBAAf","sourcesContent":["import React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nconst MainNavMobileLevel2 = ({ getHeight, title, path,  }) => {\n  const hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n  const [dimensions, setDimensions] = useState({\n    width: -1,\n    height: -1\n  });\n  const { width, height } = dimensions;\n  const [isUser, setIsUser] = useState(true);\n  const handleClick = () => {\n    if (path) {\n      return Router.push('/');\n    } else if (back) {\n      return Router.back();\n    }\n  };\n\n  return (\n    <Fragment>\n      <Measure\n        bounds\n        onResize={contentRect => {\n          setDimensions(contentRect.bounds);\n        }}\n      >\n        {({ measureRef }) => (\n          <div\n            ref={measureRef}\n            className={`fixed-top`}\n            height={getHeight(height)}\n          >\n            <nav className={`navbar ${css.navBarFlex}`}>\n              <span\n                onClick={handleClick}\n                className=\"iconfont icon_chevron-left-light\"\n                style={hamburger}\n              />\n              <div className={css.title}>{title}</div>\n            </nav>\n            {isUser ? <UserStateBar /> : ''}\n          </div>\n        )}\n      </Measure>\n    </Fragment>\n  );\n};\n\nexport default MainNavMobileLevel2;\n"]},"metadata":{},"sourceType":"module"}