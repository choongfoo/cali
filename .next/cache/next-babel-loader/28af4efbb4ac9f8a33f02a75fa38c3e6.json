{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, Fragment } from 'react';\nimport Modal from \"react-modal\";\nimport css from \"../styles/main.scss\";\nvar modalStyles = {\n  content: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#d8d8d8',\n    padding: '0',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%,-50%)',\n    border: 'none'\n  }\n};\nModal.setAppElement('#__next');\n\nvar ConvenienceStoreItem = function ConvenienceStoreItem(_ref) {\n  var logo = _ref.logo,\n      processImg = _ref.processImg;\n\n  var _useState = useState(false),\n      modalIsOpen = _useState[0],\n      setModalIsOpen = _useState[1];\n\n  var openModal = function openModal() {\n    setModalIsOpen(true);\n  };\n\n  var afterOpenModal = function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    Modal.subtitle.style.color = '#fff';\n    Modal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,.65)';\n  };\n\n  var closeModal = function closeModal() {\n    setModalIsOpen(false);\n  };\n\n  var renderImg = function renderImg(processImg) {\n    return processImg.map(function (p, i) {\n      return __jsx(\"img\", {\n        style: {\n          width: '100%'\n        },\n        key: i,\n        src: \"/images/convenienceStore/\".concat(p),\n        alt: \"\\u6D41\\u7A0B\".concat(i + 1),\n        className: \"img-responsive\"\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    onClick: openModal\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: 100,\n      maxHeight: 100\n    },\n    src: logo,\n    alt: \"\",\n    className: \"img-responsive\"\n  })), __jsx(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: modalStyles,\n    contentLabel: \"Example Modal\"\n  }, __jsx(\"div\", {\n    className: css.modalHeader\n  }, __jsx(\"div\", {\n    ref: function ref(subtitle) {\n      return Modal.subtitle = subtitle;\n    }\n  }, \"\\u8D85\\u5546\\u7E73\\u8CBB\\u6D41\\u7A0B\"), __jsx(\"span\", {\n    className: \"iconfont icon_times-light\",\n    onClick: closeModal\n  })), __jsx(\"div\", {\n    className: css.modalBody,\n    style: {\n      height: 350,\n      overflowY: 'scroll'\n    }\n  }, renderImg(processImg))));\n};\n\nexport default ConvenienceStoreItem;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/ConvenienceStoreItem.js"],"names":["React","useState","Fragment","Modal","css","modalStyles","content","width","display","flexDirection","backgroundColor","padding","top","left","right","bottom","transform","border","setAppElement","ConvenienceStoreItem","logo","processImg","modalIsOpen","setModalIsOpen","openModal","afterOpenModal","subtitle","style","color","defaultStyles","overlay","closeModal","renderImg","map","p","i","maxWidth","maxHeight","modalHeader","modalBody","height","overflowY"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from 'react';\nimport Modal from \"react-modal\";\nimport css from \"../styles/main.scss\";\n\nconst modalStyles = {\n  content: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#d8d8d8',\n    padding: '0',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%,-50%)',\n    border: 'none'\n  }\n};\n\nModal.setAppElement('#__next');\nconst ConvenienceStoreItem = ({logo, processImg}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    Modal.subtitle.style.color = '#fff';\n    Modal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,.65)';\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const renderImg = processImg => {\n    return processImg.map( (p,i)=><img style={{width: '100%'}} key={i} src={`/images/convenienceStore/${p}`} alt={`流程${i+1}`} className=\"img-responsive\"/>)\n  }\n  return (\n    <Fragment>\n      <div onClick={openModal}>\n        <img style={{maxWidth: 100,maxHeight: 100}} src={logo} alt=\"\" className=\"img-responsive\"/>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={modalStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className={css.modalHeader}>\n          <div ref={subtitle => (Modal.subtitle = subtitle)}>\n            超商繳費流程\n          </div>\n          <span className=\"iconfont icon_times-light\" onClick={closeModal}/>\n        </div>\n\n        <div className={css.modalBody} style={{height:350,overflowY:'scroll'}}>\n          {renderImg(processImg)}\n        </div>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default ConvenienceStoreItem;"]},"metadata":{},"sourceType":"module"}