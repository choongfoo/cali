{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nvar MainNavMobileLevel2 = function MainNavMobileLevel2(_ref) {\n  var getHeight = _ref.getHeight,\n      title = _ref.title,\n      path = _ref.path,\n      back = _ref.back;\n  var hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n\n  var _useState = useState({\n    width: -1,\n    height: -1\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var width = dimensions.width,\n      height = dimensions.height;\n\n  var _useState2 = useState(true),\n      isUser = _useState2[0],\n      setIsUser = _useState2[1];\n\n  var handleClick = function handleClick() {\n    if (path) {\n      return Router.push('/');\n    } else if (back) {\n      return Router.back();\n    }\n  };\n\n  return __jsx(Fragment, null, __jsx(Measure, {\n    bounds: true,\n    onResize: function onResize(contentRect) {\n      setDimensions(contentRect.bounds);\n    }\n  }, function (_ref2) {\n    var measureRef = _ref2.measureRef;\n    return __jsx(\"div\", {\n      ref: measureRef,\n      className: \"fixed-top\",\n      height: getHeight(height)\n    }, __jsx(\"nav\", {\n      className: \"navbar \".concat(css.navBarFlex)\n    }, __jsx(\"span\", {\n      onClick: handleClick,\n      className: \"iconfont icon_chevron-left-light\",\n      style: hamburger\n    }), __jsx(\"div\", {\n      className: css.title\n    }, title)), isUser ? __jsx(UserStateBar, null) : '');\n  }));\n};\n\nexport default MainNavMobileLevel2;","map":{"version":3,"sources":["/Users/liukaiming/WebstormProjects/cali/components/includes/MainNavMobileLevel2.js"],"names":["React","Component","Fragment","useState","Link","css","Router","Measure","UserStateBar","MainNavMobileLevel2","getHeight","title","path","back","hamburger","marginLeft","fontSize","width","height","dimensions","setDimensions","isUser","setIsUser","handleClick","push","contentRect","bounds","measureRef","navBarFlex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAsC;AAAA,MAAnCC,SAAmC,QAAnCA,SAAmC;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChE,MAAMC,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE,MADI;AAEhBC,IAAAA,QAAQ,EAAE;AAFM,GAAlB;;AADgE,kBAK5Bb,QAAQ,CAAC;AAC3Cc,IAAAA,KAAK,EAAE,CAAC,CADmC;AAE3CC,IAAAA,MAAM,EAAE,CAAC;AAFkC,GAAD,CALoB;AAAA,MAKzDC,UALyD;AAAA,MAK7CC,aAL6C;;AAAA,MASxDH,KATwD,GAStCE,UATsC,CASxDF,KATwD;AAAA,MASjDC,MATiD,GAStCC,UATsC,CASjDD,MATiD;;AAAA,mBAUpCf,QAAQ,CAAC,IAAD,CAV4B;AAAA,MAUzDkB,MAVyD;AAAA,MAUjDC,SAViD;;AAWhE,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIX,IAAJ,EAAU;AACR,aAAON,MAAM,CAACkB,IAAP,CAAY,GAAZ,CAAP;AACD,KAFD,MAEO,IAAIX,IAAJ,EAAU;AACf,aAAOP,MAAM,CAACO,IAAP,EAAP;AACD;AACF,GAND;;AAQA,SACE,MAAC,QAAD,QACE,MAAC,OAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,QAAQ,EAAE,kBAAAY,WAAW,EAAI;AACvBL,MAAAA,aAAa,CAACK,WAAW,CAACC,MAAb,CAAb;AACD;AAJH,KAMG;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WACC;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,SAAS,aAFX;AAGE,MAAA,MAAM,EAAEjB,SAAS,CAACQ,MAAD;AAHnB,OAKE;AAAK,MAAA,SAAS,mBAAYb,GAAG,CAACuB,UAAhB;AAAd,OACE;AACE,MAAA,OAAO,EAAEL,WADX;AAEE,MAAA,SAAS,EAAC,kCAFZ;AAGE,MAAA,KAAK,EAAET;AAHT,MADF,EAME;AAAK,MAAA,SAAS,EAAET,GAAG,CAACM;AAApB,OAA4BA,KAA5B,CANF,CALF,EAaGU,MAAM,GAAG,MAAC,YAAD,OAAH,GAAsB,EAb/B,CADD;AAAA,GANH,CADF,CADF;AA4BD,CA/CD;;AAiDA,eAAeZ,mBAAf","sourcesContent":["import React, { Component, Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport css from '../../styles/main.scss';\nimport Router from 'next/router';\nimport Measure from 'react-measure';\nimport UserStateBar from '../includes/UserStateBar';\n\nconst MainNavMobileLevel2 = ({ getHeight, title, path, back }) => {\n  const hamburger = {\n    marginLeft: '10px',\n    fontSize: '1.625rem'\n  };\n  const [dimensions, setDimensions] = useState({\n    width: -1,\n    height: -1\n  });\n  const { width, height } = dimensions;\n  const [isUser, setIsUser] = useState(true);\n  const handleClick = () => {\n    if (path) {\n      return Router.push('/');\n    } else if (back) {\n      return Router.back();\n    }\n  };\n\n  return (\n    <Fragment>\n      <Measure\n        bounds\n        onResize={contentRect => {\n          setDimensions(contentRect.bounds);\n        }}\n      >\n        {({ measureRef }) => (\n          <div\n            ref={measureRef}\n            className={`fixed-top`}\n            height={getHeight(height)}\n          >\n            <nav className={`navbar ${css.navBarFlex}`}>\n              <span\n                onClick={handleClick}\n                className=\"iconfont icon_chevron-left-light\"\n                style={hamburger}\n              />\n              <div className={css.title}>{title}</div>\n            </nav>\n            {isUser ? <UserStateBar /> : ''}\n          </div>\n        )}\n      </Measure>\n    </Fragment>\n  );\n};\n\nexport default MainNavMobileLevel2;\n"]},"metadata":{},"sourceType":"module"}