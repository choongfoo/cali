{"version":3,"file":"static/webpack/static/development/pages/index.js.abf0ee8fdfad0f5e5c9d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {Component, Fragment} from 'react'\nimport withSizes from 'react-sizes'\nimport axios from 'axios';\nimport Router from \"next/router\";\nimport DeskTopLayout from '../components/layouts/deskTopLayout'\nimport Slider from \"react-slick\";\nimport css from \"../styles/main.scss\"\n\nclass Index extends Component {\n  static async getInitialProps({pathname, query, asPath, req, res}) {\n    let userData;\n\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      userData = response.data;\n    } catch (e) {\n      console.log('error');\n    }\n\n    // console.log(pathname);\n    // console.log(query);\n    // console.log(req);\n    return {\n      user: {\n        name: 'John',\n        lastname: 'Do'\n      },\n      userData\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    // console.log(props);\n\n    this.state = {\n      users: props.userData\n    }\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      arrow:false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <Fragment>\n        <DeskTopLayout>\n          <Slider {...settings}>\n            <img src=\"images/banner/banner01.jpg\" alt=\"\" className=\"img-responsive\"/>\n            <img src=\"images/banner/banner02.jpg\" alt=\"\" className=\"img-responsive\"/>\n            <img src=\"images/banner/banner04.jpg\" alt=\"\" className=\"img-responsive\"/>\n\n\n          </Slider>\n          <div className=\"container\">\n            <h1>Hello Cali</h1>\n            <div>\n              {\n                this.props.isMobile ? null:\n                  <>\n                    <button onClick={() => Router.push(\"/about\")}>關於卡利</button>\n                    <button onClick={() => Router.push(\"/online_baccarat\")}>Go to online Baccarat</button>\n                  </>\n              }\n            </div>\n          </div>\n        </DeskTopLayout>\n      </Fragment>\n\n    )\n  }\n}\n\nconst mapSizesToProps = ({width}) => ({\n  isMobile: width < 768,\n});\nexport default withSizes(mapSizesToProps)(Index)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;;;AAIA;AACA;;AADA;AACA;;;;;;;AAEA;AACA;;AAKA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;;;;;;;;;;AAQA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AADA;AAJA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAnEA;AACA;AAqEA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}